#!/usr/bin/env node

var colors = require('colors');
var args = require('process-argv')({
    enable_commands: true
});
var axios = require('axios');
var config = require('./config');
var fs = require('fs');

switch (args.command) {
    case "register":
        registerWorker();
        break;
    case "start":
        startWorker();
        break;
    default:
        break;
}

function registerWorker() {
    if(typeof args.options === 'undefined' || typeof args.options.secret === 'undefined') {
        console.log('Secret is required to register worker'.red);
        process.exit(1);
    }
    console.log('Registering worker'.green);
    axios.post(
        config.API_URL + '/worker/register', {
            secret: args.options.secret
        })
        .then(function (response) {
            var token = response.data.token;
            fs.writeFileSync(__dirname + '/runtime.json', JSON.stringify({secret: token}));
            console.log("Successfully registered worker".bgGreen.black);

        })
        .catch(function (error) {
            console.error("Error registering worker".red);
            if(error.response.status === 403) {
                console.error("Bad worker secret".red);
            }
        });
}

function startWorker() {
    var runtime = require(__dirname + '/runtime.json');
    axios.defaults.headers.common['X-WORKER-TOKEN'] = runtime.secret;
    var socket = require('socket.io-client')(config.SOCKET_SERVER_URL);
    heartbeat();
    console.log("Worker started".green)
    socket.on('connect', () => {
        console.log("Connected to socket server".yellow)
    });
    socket.on('worker-crawl-task', function(data) {
        console.log("Crawling task received".orange)
        if(data.secret === runtime.secret) {
            console.log("Executing crawling task".bold.purple);
            executeCrawlTask(data.task)
        }
    });
}

function heartbeat() {
    setInterval(() => {
        axios.post(config.API_URL + '/worker/heartbeat')
            .then((response) => {
            console.log("Heartbeat sent.".green)
            }).catch((error) => {
            console.log(error)
        })
    }, 60000);
}

function executeCrawlTask(task) {
    switch (task.name) {
        case 'web':
            var crawler = require('./crawlers/web.js');
            break;
        default:
            break;

        crawler.execute();
    }
}